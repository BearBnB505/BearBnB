<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bearbnb.mapper.ReviewMapper">

    <!--  호스트 페이지 리뷰 리스트 가져오기  -->
<!--    <select id="ReviewList" resultType="com.bearbnb.dto.ReviewDto">-->
<!--        <![CDATA[-->
<!--        SELECT re.*, lod.lodging_name-->
<!--        FROM review re-->
<!--                JOIN lodging lod-->
<!--                ON re.lodging_num = lod.lodging_num-->
<!--        WHERE re.deleted_yn = 'N'-->
<!--        ORDER BY re.review_create_dt desc-->
<!--        ]]>-->
<!--    </select>-->


    <select id="ReviewList" resultType="com.bearbnb.dto.ReviewDto">
        <![CDATA[
        SELECT re.*, lod.lodging_name
        FROM lodging lod
                JOIN review re
                ON lod.lodging_num = re.lodging_num
        WHERE lod.user_id = '${userId}' and re.deleted_yn = 'N'
        ORDER BY re.review_create_dt desc
        ]]>
    </select>

    <!-- 마이페이지 리뷰 리스트 가져오기  -->
    <select id="MemberReviewList" resultType="com.bearbnb.dto.ReviewDto">
        <![CDATA[
        SELECT re.*, lod.lodging_name, mem.name
        FROM review re
                 JOIN lodging lod
                      ON re.lodging_num = lod.lodging_num
                 JOIN members mem
                      ON re.user_id = mem.user_id
        WHERE re.deleted_yn = 'N' and re.user_id = '${userId}'
        ORDER BY re.review_create_dt desc
        ]]>
    </select>

<!--    원본-->
<!--    <select id="ReviewListContent" resultType="com.bearbnb.dto.ReviewDto">-->
<!--        <![CDATA[-->
<!--        SELECT re.*, lod.lodging_name-->
<!--        FROM review re-->
<!--                 JOIN lodging lod-->
<!--                      ON re.lodging_num = lod.lodging_num-->
<!--        WHERE re.deleted_yn = 'N'and re.idx=#{idx}-->
<!--&#45;&#45;         ORDER BY re.review_create_dt desc-->
<!--        ]]>-->
<!--    </select>-->

    <update id="ReviewUpdate" parameterType="com.bearbnb.dto.ReviewDto">
        <![CDATA[
        update review
        set comment = '${comment}'
        where idx = '${idx}'
        ]]>
    </update>

    <update id="ReviewDelete" parameterType="com.bearbnb.dto.ReviewDto">
        <![CDATA[
        update review
        set deleted_yn = 'Y'
        where idx = '${idx}'
        ]]>
    </update>

    <select id="ReviewAvgList" resultType="com.bearbnb.dto.ReviewAvgDto">
        <![CDATA[
        SELECT
            avg(cast(clean_grade as float)) as clean_grade,
            avg(cast(accuracy_grade as float)) as accuracy_grade,
            avg(cast(communication_grade as float)) as communication_grade,
            avg(cast(location_grade as float)) as location_grade,
            avg(cast(check_in_grade as float)) as check_in_grade,
            avg(cast(cost_grade as float)) as cost_grade,
            round((clean_grade + accuracy_grade + communication_grade + location_grade + check_in_grade + cost_grade)/6, 1) as review_total,
            count(*) as review_count
        FROM review
        WHERE lodging_num = #{lodgingNum}
          AND deleted_yn = 'N'
        ]]>
    </select>

    <select id="allReviewList" resultType="com.bearbnb.dto.ReviewDto">
        <![CDATA[
        SELECT idx
        FROM review
        ORDER BY idx DESC
        ]]>
    </select>


    <insert id="writeReview" parameterType="com.bearbnb.dto.ReviewDto">
        <![CDATA[
        INSERT INTO review(idx, user_id, comment, clean_grade, accuracy_grade, communication_grade , location_grade, check_in_grade, cost_grade, lodging_num)
        VALUES (#{idx}, #{userId}, #{comment}, #{cleanGrade},#{accuracyGrade},#{communicationGrade},#{locationGrade},#{checkInGrade},#{costGrade},#{lodgingNum})
        ]]>
    </insert>

<!--    새로 만든거-->
    <select id="reviewListContent" parameterType="com.bearbnb.dto.ReviewDto" resultType="com.bearbnb.dto.ReviewDto">
        <![CDATA[
        SELECT * FROM review WHERE idx = #{idx}
        ]]>
    </select>
</mapper>