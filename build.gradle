plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.7'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    compileOnly 'org.projectlombok:lombok'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.0'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    testImplementation 'org.springframework.security:spring-security-test'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'com.auth0:java-jwt:3.19.2'

    //gson
    implementation 'com.google.code.gson:gson:2.8.7'

//    implementation 'net.sf.json-lib:json-lib:2.4'
    implementation 'org.json:json:20200518'
    // https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'

//    gson
    implementation 'com.google.code.gson:gson:2.8.6'

    // https://mvnrepository.com/artifact/com.github.pagehelper/pagehelper-spring-boot-starter
    implementation 'com.github.pagehelper:pagehelper-spring-boot-starter:1.4.5'

//    email인증
    // https://mvnrepository.com/artifact/javax.mail/javax.mail-api
    implementation 'javax.mail:javax.mail-api:1.6.2'

// https://mvnrepository.com/artifact/org.springframework/spring-context-support
    implementation 'org.springframework:spring-context-support:5.3.24'
    implementation 'org.springframework.boot:spring-boot-starter-mail'


}


tasks.named('test') {
    useJUnitPlatform()
}

////////////// 추가된 내용 ///////////////

// 리액트 프로젝트 폴더를 변수에 저장
def frontendDir = "$projectDir/frontend"

// 리액트 소스코드 복사 장소
sourceSets {
    main {
        resources {
            srcDirs = ["$projectDir/src/main/resources"]
        }
    }
}

processResources {
    dependsOn "copyReactBuildFiles"
}

// 리액트 프로젝트의 모듈 install
task installReact(type: Exec) {
    workingDir "$frontendDir"
    inputs.dir "$frontendDir"
    group = BasePlugin.BUILD_GROUP
//    os 에 따라 실행 방법 변경
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine "npm.cmd", "audit", "fix"
        commandLine "npm.cmd", "install"
    }
    else {
        commandLine "npm", "audit", "fix"
        commandLine "npm", "install"
    }
}

// 리액트 프로젝트 빌드, 함수 선언
task buildReact(type: Exec) {
    dependsOn "installReact"
    workingDir "$frontendDir"
    inputs.dir "$frontendDir"
    group = BasePlugin.BUILD_GROUP
//    os 에 따라서 npm build 방식 변경, 리액트 프로젝트 빌드
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine "npm.cmd", "run-script", "build"
    }
    else {  // linux, mac os 일때 실행
        commandLine "npm", "run-script", "build"
    }
}

// 리액트 프로젝트 빌드 파일을 스프링 프로젝트로 복사, 함수 선언
task copyReactBuildFiles(type: Copy) {
    dependsOn "buildReact"
//    리액트 프로젝트 빌드 완료 파일 위치
    from "$frontendDir/build"
//    스프링부트 프로젝트 빌드 파일 위치 중 resources/main/static 폴더
    into "$buildDir/resources/main/static"
}

// 배포 시 리액트 프로젝트의 배포 파일도 함께 포함
tasks.bootJar {
    dependsOn "copyReactBuildFiles"
}